name: PHP Composer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        php:
          - 5.3
          - 5.4
          - 5.5
          - 5.6
          - 7.0
          - 7.1
          - 7.2
          - 7.3
          - 7.4
          - 8.0

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: none

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - run: find src/ -type f -name '*.php' -print0 | xargs -0 -L1 -P0 -- php -l -f

  phpcs:

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update --prefer-dist --no-progress --ansi

      - run: composer require --dev --ansi squizlabs/php_codesniffer

      - run: vendor/bin/phpcs --colors --standard=PSR12 src tests

  phpstan:

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update --prefer-dist --no-progress --ansi

      - run: composer require --dev --ansi phpstan/phpstan

      - run: vendor/bin/phpstan analyse -l max --no-progress --ansi src

  phpunit:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        php:
          - 5.5
          - 5.6
          - 7.0
          - 7.1
          - 7.2
          - 7.3
          - 7.4
          - 8.0
        os:
          - macos-11.0
          - ubuntu-20.04
          - windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install dependencies
        run: composer update --prefer-dist --no-progress --ansi

      - name: Run test suite
        run: vendor/bin/simple-phpunit --group ${{ runner.os }}

  psalm:

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update --prefer-dist --no-progress --ansi

      - run: composer require --dev --ansi vimeo/psalm

      - run: vendor/bin/psalm --output-format=github --no-progress
